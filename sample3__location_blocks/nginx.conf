user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$server_name - $server_port - '
                      '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    keepalive_timeout  65;
    sendfile        on;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # static
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
        
        # files
        location /files {
            autoindex on;              
            autoindex_exact_size off;
            autoindex_localtime on; 
            root /usr/share/nginx/html;
        }

        # api v1 by direct path
        location /api/v1/ {
            rewrite ^/api/v1/(.*)$ /api/v2/$1 redirect;
        }

        # api v2 by direct path
        location /api/v2/ {
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8082/;
        }
        
        # api v3 by direct path
        location /api/v3/ {
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8083/;
        }

        # api v1 or v2 by header API-VERSION
        location /api/ {
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/(.*)$ /$1;
            if ($http_api_version = '1') {
                proxy_pass http://localhost:8082;
                break;
            } 
            if ($http_api_version = '2') {
                proxy_pass http://localhost:8082;
                break;
            } 
            if ($http_api_version = '3') {
                proxy_pass http://localhost:8083;
                break;
            }
            return 405;
        }
    }

    # api server v2
    server {
        listen 8082;
        server_name localhost;
        default_type text/plain;
        
        location / {
            return 200 'api v2';
        }
    }
    
    # api server v3
    server {
        listen 8083;
        server_name localhost;
        default_type text/plain;
        
        location / {
            return 200 'api v3';
        }
    }
}